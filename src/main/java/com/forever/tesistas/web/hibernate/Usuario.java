package com.forever.tesistas.web.hibernate;
//default package

//Generated Nov 16, 2017 10:11:08 PM by Hibernate Tools 5.2.5.Final

import java.beans.Transient;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario", catalog = "alcohol", uniqueConstraints = @UniqueConstraint(columnNames = "email"))
public class Usuario implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private Address address;
	private String nombre;
	private String apPaterno;
	private String apMaterno;
	private String email;
	private String password;
	private Date createTime;
	private Boolean admin;

	public Usuario() {
	}

	public Usuario(String nombre, String apPaterno, String apMaterno, String email, String password) {
		this.nombre = nombre;
		this.apPaterno = apPaterno;
		this.apMaterno = apMaterno;
		this.email = email;
		this.password = password;
	}

	public Usuario(Address address, String nombre, String apPaterno, String apMaterno, String email, String password,
			Date createTime, Boolean admin) {
		this.address = address;
		this.nombre = nombre;
		this.apPaterno = apPaterno;
		this.apMaterno = apMaterno;
		this.email = email;
		this.password = password;
		this.createTime = createTime;
		this.admin = admin;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "address_id")
	public Address getAddress() {
		return this.address;
	}

	public void setAddress(Address address) {
		this.address = address;
	}

	@Column(name = "nombre", nullable = false, length = 45)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "ap_paterno", nullable = false, length = 45)
	public String getApPaterno() {
		return this.apPaterno;
	}

	public void setApPaterno(String apPaterno) {
		this.apPaterno = apPaterno;
	}

	@Column(name = "ap_materno", nullable = false, length = 45)
	public String getApMaterno() {
		return this.apMaterno;
	}

	public void setApMaterno(String apMaterno) {
		this.apMaterno = apMaterno;
	}

	@Column(name = "email", unique = true, nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", nullable = false, length = 32)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "create_time", length = 19, insertable = false)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Column(name = "admin", insertable = false)
	public Boolean getAdmin() {
		return this.admin;
	}

	public void setAdmin(Boolean admin) {
		this.admin = admin;
	}

	@Transient
	public String nombreCompleto() {
		return new StringBuffer().append(nombre).append(" ").append(apPaterno)
				.append((apMaterno != null) ? " " + apMaterno : "").toString();
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		StringBuilder stringBuilder = new StringBuilder();
		stringBuilder.append("Usuario [mail=");
		stringBuilder.append(email);
		stringBuilder.append(", password=");
		stringBuilder.append(password);
		stringBuilder.append(", nombre=");
		stringBuilder.append(nombre);
		stringBuilder.append(", apPaterno=");
		stringBuilder.append(apPaterno);
		stringBuilder.append(", apMaterno=");
		stringBuilder.append(apMaterno);
		stringBuilder.append(", admin=");
		stringBuilder.append(admin);
		stringBuilder.append("]");
		return stringBuilder.toString();
	}

}
